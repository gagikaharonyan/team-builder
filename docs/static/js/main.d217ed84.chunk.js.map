{"version":3,"sources":["components/navBar/NavBar.js","components/header/UserProfileDisplay.js","components/header/Header.js","redux/actionCreators/user.js","components/pages/login/LoginPage.js","components/loading/Loading.js","components/pages/register/RegisterPage.js","components/pages/home/HomePage.js","redux/actionCreators/projects.js","components/pages/projects/ProjectsPage.js","components/pages/teams/TeamsPage.js","redux/actionCreators/teams.js","redux/actionCreators/topics.js","components/pages/topics/TopicsPage.js","App.js","serviceWorker.js","redux/reducers/topics.js","redux/reducers/projects.js","redux/reducers/teams.js","redux/store.js","redux/reducers/user.js","index.js"],"names":["NavBar","state","isMenuOpen","this","displayNavMenu","open","document","body","classList","setState","className","onClick","props","links","map","link","index","key","to","url","title","handleToggleClick","React","Component","useStyles","makeStyles","root","position","top","right","width","actionArea","pointerEvents","media","height","editeLink","marginLeft","marginBottom","UserProfileDisplay","classes","src","Card","CardActionArea","CardMedia","image","avatarUrl","CardContent","Typography","gutterBottom","variant","component","firstName","lastName","color","email","birthDate","sex","jsExperience","reactExperience","CardActions","onClose","Button","size","Header","user","window","getSession","data","onLogOut","connect","UserInfo","isUserDisplayOpen","alt","userHasError","bool","type","hasError","userisLoading","isLoading","userFetchDataSuccess","userFetchData","rememberMe","onInvalidData","dispatch","client","login","loading","response","token","setSession","error","LoginPage","isLoggedIn","onLogin","fetchData","submitting","LoginForm","formData","password","isDataInvalid","handleOnChange","event","target","name","value","handleOnSubmit","preventDefault","onSubmit","htmlFor","id","aria-describedby","onChange","required","checked","ev","Loading","RegisterPage","isRegistered","handleSubmit","match","params","as","register","res","profileEditeFetch","companies","editProfile","console","log","userProfileEditFetch","RegisterForm","companyId","getCompanies","nextProps","maxLength","minLength","data-date-format","min","length","comp","HomePage","projectsHaveError","haveError","ProjectsPage","handleVoteProject","voteProject","projects","areLoading","project","Project","description","votedByMe","onVote","getProjects","voteType","projectVotingSuccess","fetchVoteProject","TeamsPage","teams","team","Team","getTeams","topic","members","member","topicsHaveError","TopicsPage","handleCreateTopic","addTopic","handleDeleteTopic","deleteTopic","handleVoteTopic","voteTopic","topics","onCreateTopic","topicIsAdding","Topic","votingsCount","canDelete","onDelete","getTopics","newTopic","topicAddingSuccess","fetchNewTopic","topicDeletingSuccess","fetchDeleteTopic","topicVotingSuccess","fetchVoteTopic","AddTopic","addBtnClicked","newTopicName","handleNameInput","handleNameInputDisplay","placeholder","App","logOut","exact","path","Projects","Teams","Topics","removeSession","Boolean","location","hostname","initialState","teamBuilder","combineReducers","isLogOuting","action","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d217ed84.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavBar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class NavBar extends React.Component {\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    handleToggleClick() {\r\n        this.displayNavMenu(!this.state.isMenuOpen);\r\n    }\r\n\r\n    displayNavMenu(open) {\r\n        document.body.classList = open ? 'fixed-position' : '';\r\n        this.setState({isMenuOpen: open});\r\n    }\r\n\r\n    render() {\r\n        const {isMenuOpen} = this.state;\r\n\r\n        return (\r\n            <div className=\"Nav-bar col-container\">\r\n                <ul className={isMenuOpen ? 'nav-menu toggle-clicked' : 'nav-menu'} onClick={() => {this.displayNavMenu(false)}}>\r\n                    {this.props.links.map((link, index) => \r\n                        <li key={index}onClick={() => {this.displayNavMenu(false)}}>\r\n                            <Link to={link.url}>{link.title}</Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <span className=\"nav-toggle\" onClick={() => {this.handleToggleClick()}}>\r\n                    <i className={isMenuOpen ? 'fas fa-times fa-2x' : 'fas fa-bars fa-2x'}></i>\r\n                </span>\r\n            </div>);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: '65px',\r\n    right: '10px',\r\n    width: 300,\r\n  },\r\n  actionArea: {\r\n    pointerEvents: 'none',\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  editeLink: {\r\n      marginLeft: 20,\r\n      marginBottom: 5,\r\n  }\r\n});\r\n\r\nexport default function UserProfileDisplay(props) {\r\n  const classes = useStyles();\r\n  const {src} = props;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea className={classes.actionArea}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={src.avatarUrl}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {src.firstName + ' ' + src.lastName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              <span>{`E-Mail: ${src.email}`}</span><br/>\r\n              <span>{`Birth date: ${src.birthDate}`}</span><br/>\r\n              <span>{`Sex: ${src.sex}`}</span><br/>\r\n              <span>{`Java Scritp experience ${src.jsExperience} months`}</span><br/>\r\n              <span>{`React JS experience ${src.reactExperience} months`}</span><br/>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link to=\"/userprofile/edit_profile\" className={classes.editeLink} onClick={props.onClose}>\r\n          Edit profile\r\n        </Link>\r\n        <Button size=\"small\" color=\"primary\" onClick={props.onClose}>\r\n          Close\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react' \r\nimport './Header.css'\r\nimport NavBar from '../navBar/NavBar'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport UserProfileDisplay from './UserProfileDisplay';\r\n\r\nclass Header extends React.Component {\r\n    \r\n    render() {\r\n        const{user} = this.props;\r\n        const navLinks = [\r\n            {url: '/teams', title: 'Teams'},\r\n            {url: '/topics', title: 'Topics'},\r\n            {url: '/projects', title: 'Projects'},\r\n        ]\r\n\r\n        return(\r\n            <div className=\"Header col-container\">\r\n                <Link className=\"app-logo\" to='/'><span>Team Builder</span></Link>        \r\n                {window.getSession() \r\n                ?<>\r\n                    <NavBar links={navLinks}></NavBar>\r\n                    <UserInfo src={user.data} onLogOut={this.props.onLogOut}/>\r\n                </>\r\n                :<Link className=\"unlogined-logo\" to='/'><span>Team Builder</span></Link>  }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user}\r\n}\r\n  \r\nexport default connect(mapStateToProps,null)(Header)\r\n\r\nclass UserInfo extends React.Component {\r\n    state = {\r\n        isUserDisplayOpen: false\r\n    }\r\n    \r\n    render() {\r\n        const {src} = this.props;\r\n        return(<>\r\n            <div className=\"header-user-info col-container\">\r\n                <Link to=\"#\">\r\n                    <div className=\"col-container\" onClick={() => this.setState({isUserDisplayOpen: !this.state.isUserDisplayOpen})}>\r\n                        <span className=\"col-4\">{src.firstName}</span>\r\n                        <span className=\"col-5\">{src.lastName}</span>\r\n                        <div className=\"col-3\">\r\n                            <img src={src.avatarUrl} alt=\"user\"></img>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                <button className=\"action-btn log-out-btn col-3\" onClick={this.props.onLogOut}>Log out</button>            \r\n            </div>\r\n            {this.state.isUserDisplayOpen && <UserProfileDisplay \r\n                                                src={src}\r\n                                                onClose={() => this.setState({isUserDisplayOpen: false})}>\r\n                                            </UserProfileDisplay>}\r\n            </>\r\n        );  \r\n    }\r\n     \r\n}\r\n\r\n","function userHasError(bool) {\r\n    return {\r\n        type: 'USER_HAS_ERROR',\r\n        hasError: bool\r\n    };\r\n}\r\n\r\nfunction userisLoading(bool) {\r\n    return {\r\n        type: 'USER_IS_LOADING',\r\n        isLoading: bool\r\n    };\r\n}\r\n\r\nfunction userFetchDataSuccess(user) {\r\n    return {\r\n        type: 'USER_FETCH_DATA_SUCCESS',\r\n        data: user\r\n    };\r\n}\r\n\r\nexport function userLogOut() {\r\n    return {\r\n        type: 'USER_LOG_OUT',\r\n    };\r\n}\r\n\r\nexport function userFetchData(data, rememberMe, onInvalidData) {\r\n    return (dispatch) => {\r\n        window.client.login(data, onInvalidData,\r\n            (loading) => {\r\n                dispatch(userisLoading(loading));\r\n            },\r\n            (response) => {\r\n                if(!data.token) {\r\n                    window.setSession(response.token, rememberMe)\r\n                }\r\n                dispatch(userFetchDataSuccess(response))\r\n            },\r\n            (error) => {\r\n                dispatch(userHasError(true))\r\n            }\r\n       );\r\n    };\r\n}\r\n\r\nexport function userFetchLogOut() {\r\n    return (dispatch) => {\r\n        window.client.logOut(() => {\r\n            window.removeSession();\r\n            dispatch(userLogOut());\r\n        })\r\n    }\r\n}\r\n\r\nexport function userProfileEditFetch(data) {\r\n    return (dispatch) => {\r\n        const fetchData = {...data};\r\n        delete fetchData.companies;\r\n        delete fetchData.password;\r\n        delete fetchData.token;\r\n        window.client.editProfile(fetchData,\r\n            (loading) => {\r\n                dispatch(userisLoading(loading));\r\n            },\r\n            () => {\r\n                console.log('success')\r\n                dispatch(userFetchDataSuccess(data))\r\n            },\r\n            (error) => {\r\n                dispatch(userHasError(true))\r\n            }\r\n       );\r\n    };\r\n}\r\n","import React from 'react'\r\nimport './LoginPage.css'\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport {userFetchData} from '../../../redux/actionCreators/user';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass LoginPage extends React.Component {\r\n    render() {\r\n        const {user} = this.props;\r\n        if(user.isLoggedIn) {\r\n            return <Redirect to='/'></Redirect>\r\n        }\r\n\r\n        return (\r\n            <div className=\"Login-page page row-container\">\r\n                <LoginForm onLogin={this.props.fetchData} submitting={user.isLoading}></LoginForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (data, rememberMe, onInvalidData) => dispatch(userFetchData(data, rememberMe, onInvalidData))\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    state = {\r\n        formData: {email: '', password: ''},\r\n        rememberMe: false,\r\n        isDataInvalid: false\r\n    }\r\n\r\n    handleOnChange = event => {\r\n        this.setState({formData: {...this.state.formData, [event.target.name]: event.target.value}});\r\n    }\r\n\r\n    handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onLogin(this.state.formData, this.state.rememberMe, () => {\r\n            this.setState({isDataInvalid: true});\r\n        });\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <div className=\"Login-form container row-container\">\r\n                <h1 className=\"form-caption\">Log In</h1>\r\n                 <form onSubmit={this.handleOnSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                        <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                            value={this.state.formData.email} onChange={this.handleOnChange} required></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"\r\n                            value={this.state.formData.password} onChange={this.handleOnChange} required></input>\r\n                    </div>\r\n                    <div className=\"form-group form-check\">\r\n                        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" \r\n                            checked={this.state.rememberMe} onChange={ev => this.setState({rememberMe: ev.target.checked})}></input>\r\n                        <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">Remember me</label>\r\n                    </div>\r\n                    {this.state.isDataInvalid && <span className=\"text-danger\">Invalid username or password</span>}\r\n                    <div className=\"form-row\">\r\n                        <button type=\"submit\" className={`btn btn-success ${this.props.submitting ? 'inactive-btn' : ''}`}>Submit</button>\r\n                        <Link className=\"action-btn register-btn\" to=\"/userprofile/register\">Create account</Link>\r\n                    </div>                    \r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default function Loading() {\r\n    return <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n}","import React from 'react';\r\nimport './RegisterPage.css';\r\nimport Loading from '../../loading/Loading';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {userProfileEditFetch} from '../../../redux/actionCreators/user';\r\n\r\n class RegisterPage extends React.Component {\r\n    state = {\r\n         isRegistered: false\r\n    }\r\n\r\n    handleSubmit = (data) => {\r\n        if(this.props.match.params.as === 'register'){\r\n            window.client.register(data, (res) => this.setState({isRegistered: true}));\r\n        } else {\r\n            this.props.profileEditeFetch(data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const as = this.props.match.params.as;\r\n        if((!window.getSession() && as !== 'register') || this.state.isRegistered) {\r\n            return <Redirect to=\"/login\" /> \r\n        }\r\n        \r\n        return (\r\n            <div className=\"Registe-page page row-container\">\r\n                <RegisterForm as={as} user={this.props.user} onSubmit={this.handleSubmit}></RegisterForm>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {user: state.user}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        profileEditeFetch: (data) => dispatch(userProfileEditFetch(data))\r\n    };\r\n};\r\n  \r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterPage);\r\n\r\nclass RegisterForm extends React.Component {\r\n    state = {\r\n                email: '',\r\n                password: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                birthDate: '',\r\n                sex: 'male',\r\n                avatarUrl: '',\r\n                jsExperience: '',\r\n                reactExperience: '',\r\n                companyId: 1,\r\n                companies: []\r\n          }\r\n\r\n    componentDidMount() {\r\n        window.client.getCompanies((companies) => this.setState({companies}));\r\n        if(this.props.as === 'edit_profile') {\r\n            this.setState(this.props.user.data);\r\n        } \r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        if(nextProps.as === 'edit_profile') {\r\n            this.setState(nextProps.user.data);\r\n        } \r\n    }\r\n\r\n    handleOnChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    }\r\n\r\n    render() {\r\n        const {companies} = this.state;\r\n        const submitting = this.props.user.isLoading;\r\n\r\n        return(\r\n            <div className=\"Register-form row-container container\">\r\n               {this.props.as === 'register' ?  <h1>Create Account</h1> : <h1>Edit Profile</h1>}\r\n                <form onSubmit={this.handleOnSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputEmail4\">Email</label>\r\n                            <input name=\"email\" type=\"email\" className=\"form-control\" id=\"inputEmail4\" value={this.state.email}\r\n                                 onChange={this.handleOnChange}  maxLength=\"20\" required></input>\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Email shouldn't be used for another account.</small>\r\n                        </div>\r\n                        {this.props.as === 'register'\r\n                         ?  <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Password</label>\r\n                                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"inputPassword4\" \r\n                                    value={this.state.password} onChange={this.handleOnChange} minLength=\"6\" maxLength=\"20\" required></input>\r\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">Password must be at least 6 characters.</small>\r\n                            </div>\r\n                         : ''}\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputFirstName\">First name</label>\r\n                            <input name=\"firstName\" type=\"text\" className=\"form-control\" id=\"inputFirstName\"\r\n                                value={this.state.firstName} onChange={this.handleOnChange}  maxLength=\"15\" required></input>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputLastname\">Last name</label>\r\n                            <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"inputLastname\" \r\n                                value={this.state.lastName} onChange={this.handleOnChange}  maxLength=\"15\" required></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-4\">\r\n                            <label htmlFor=\"inputSex\">Sex</label>\r\n                            <select name=\"sex\" id=\"inputState\" className=\"form-control\" value={this.state.sex} onChange={this.handleOnChange}>\r\n                                <option value=\"male\">Male</option>\r\n                                <option value=\"female\">Female</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group col-md-8\">\r\n                            <label htmlFor=\"inputBirthDate\">Birth Date</label>\r\n                            <input name=\"birthDate\" type=\"date\" className=\"form-control\" id=\"inputBirthDate\" \r\n                                data-date-format=\"YYYY MMMM DD\" value={this.state.birthDate} onChange={this.handleOnChange} required></input>\r\n                        </div>            \r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-12\">\r\n                            <label htmlFor=\"inputPhotoUrl\">Photo URL</label>\r\n                            <input name=\"avatarUrl\" type=\"text\" className=\"form-control\" id=\"inputPhotoUrl\" value={this.state.avatarUrl} onChange={this.handleOnChange} required></input>\r\n                            <small id=\"emailHelp\" className=\"form-text text-muted\">Past link of your photo here.</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-3\">\r\n                            <label htmlFor=\"inputJsExperience\">Js experience</label>\r\n                            <input name=\"jsExperience\" type=\"number\" className=\"form-control\" id=\"inputJsExperience\" min=\"0\" value={this.state.jsExperience} onChange={this.handleOnChange} required></input>\r\n                            <small className=\"form-text text-muted\">by month</small>\r\n                        </div>    \r\n                        <div className=\"form-group col-md-3\">\r\n                            <label htmlFor=\"inputReactJsExperience\">React experience</label>\r\n                            <input name=\"reactExperience\" type=\"number\" className=\"form-control\" id=\"inputReactJsExperience\" min=\"0\" value={this.state.reactExperience} onChange={this.handleOnChange} required></input>\r\n                            <small className=\"form-text text-muted\">by month</small>\r\n                        </div>    \r\n                        <div className=\"form-group col-md-6 row-container\">\r\n                            <label htmlFor=\"inputCompanyName\">Company name</label>\r\n                            {companies.length !== 0\r\n                            ?<select name=\"companyId\" id=\"inputState\" className=\"form-control\" value={this.state.companyId} onChange={this.handleOnChange}>\r\n                                {companies.map((comp) => <option key={comp.id} value={comp.id}>{comp.name}</option>)}\r\n                            </select>\r\n                            :<Loading></Loading>}   \r\n                        </div>                        \r\n                    </div>\r\n                    <button type=\"submit\" className={`btn btn-success ${submitting ? 'inactive-btn' : ''}`}>{this.props.as === 'register' ? 'Create account' : 'Save'}</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    render() {\r\n        if(!window.getSession()) {\r\n            return <Redirect to=\"/login\" /> \r\n        } \r\n        return(\r\n            <Redirect to=\"/teams\" /> \r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         user: state.user,\r\n//         hasError: state.itemsHaveError,\r\n//         isLoading: state.itemsAreLoading\r\n//     };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n       \r\n//     };\r\n// };\r\n\r\nexport default connect(null, null)(HomePage);","const projectsHaveError = (bool) => ({type: 'PROJECTS_HAVE_ERROR', haveError: bool});\r\nconst projectsAreLoading = (bool) => ({type: 'PROJECTS_ARE_LOADING', areLoading: bool});\r\nconst projectsFetchDataSuccess = (projects) => ({ type: 'PROJECTS_FETCH_DATA_SUCCESS', data: projects});\r\nconst projectVotingSuccess = (id, voteType) => ({type: 'PROJECT_VOTING_SUCCESS', id, voteType})\r\n\r\nexport function projectsFetchData() {\r\n    return (dispatch) => {\r\n        window.client.getProjects(\r\n            (loading) => {\r\n                dispatch(projectsAreLoading(loading));\r\n            },\r\n            (response) => {\r\n                dispatch(projectsFetchDataSuccess(response));\r\n            },\r\n            (error) => {\r\n                dispatch(projectsHaveError(true));\r\n            }\r\n       );\r\n    };\r\n}\r\n\r\nexport function fetchVoteProject(id, type) {\r\n    return (dispatch) => {\r\n        window.client.voteProject(id, type,\r\n            (loading) => {\r\n                //dispatch(topicIsAdding(loading));\r\n            },\r\n            () => {\r\n                dispatch(projectVotingSuccess(id, type));\r\n            },\r\n            (error) => {\r\n                dispatch(projectsHaveError(true));\r\n            }\r\n       );\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {projectsFetchData, fetchVoteProject} from '../../../redux/actionCreators/projects';\r\nimport './ProjectsPage.css';\r\nimport Loading from '../../loading/Loading';\r\n\r\nclass ProjectsPage extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchData();\r\n    }\r\n\r\n    handleVoteProject = (id, type) => {\r\n        this.props.voteProject(id, type);\r\n    }\r\n\r\n    render() {\r\n        const {projects} = this.props;\r\n        if(!window.getSession()) {\r\n            return <Redirect to=\"/login\" /> \r\n        }\r\n\r\n        return(\r\n            <div className=\"Projects-page page row-container\">\r\n                {projects.areLoading\r\n                ?<Loading></Loading>\r\n                :projects.data.map(project =>\r\n                    <Project\r\n                        key={project.id}\r\n                        title={project.title}\r\n                        description={project.description}\r\n                        votedByMe={project.votedByMe}\r\n                        onVote={() => this.handleVoteProject(project.id, project.votedByMe? 'unlike' : 'like')}\r\n                    ></Project>)}\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        projects: state.projects,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       fetchData: () => dispatch(projectsFetchData()),\r\n       voteProject: (id, type) => dispatch(fetchVoteProject(id, type))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsPage);\r\n\r\nfunction Project (props) {\r\n    return(\r\n        <div className=\"Project container row-container\">\r\n            <div className=\"project-header\">\r\n                <span>{props.title}</span>\r\n            </div>\r\n            <div className=\"project-body col-container\">\r\n                <span className=\"procet-description col-11\">{props.description}</span>\r\n                <i className={`col-1 fas fa-thumbs-up project-vote-mark ${props.votedByMe? 'voted-' : 'unvoted-'}topic-mark`}\r\n                    onClick={props.onVote}></i>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {teamsFetchData} from '../../../redux/actionCreators/teams';\r\nimport './TeamsPage.css';\r\nimport Loading from '../../loading/Loading';\r\n\r\nclass TeamsPage extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchData();\r\n    }\r\n\r\n    render() {\r\n        const {teams} = this.props;\r\n        if(!window.getSession()) {\r\n            return <Redirect to=\"/login\" /> \r\n        }\r\n\r\n        return(\r\n            <div className=\"Teams-page page row-container\">\r\n                {teams.areLoading\r\n                ?<Loading></Loading>\r\n                :teams.data.map(team =>\r\n                    <Team\r\n                        key={team.id}\r\n                        src={team}\r\n                    ></Team>)}\r\n            </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        teams: state.teams,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       fetchData: () => dispatch(teamsFetchData()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamsPage);\r\n\r\nfunction Team ({src}) {\r\n    return(\r\n        <div className=\"Team container col-container\">\r\n            <div className=\"team-info row-container col-6\">\r\n                <span>{src.name}</span>\r\n                <small>Name</small>\r\n                <span>{src.topic}</span>\r\n                <small>Topic</small>\r\n                <span>{src.project}</span>\r\n                <small>Project</small>\r\n            </div>\r\n            <div className=\"team-members row-container col-6\">\r\n                <h3>Team members</h3>\r\n                {src.members.map((member, index) => (\r\n                    <div key={index} className=\"member col-container\">\r\n                        <span>{member.firstName + ' ' + member.lastName}</span>\r\n                        <img src={member.avatarUrl} alt='member'></img>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}","const teamsHaveError = (bool) => ({type: 'TEAMS_HAVE_ERROR', haveError: bool});\r\nconst teamsAreLoading = (bool) => ({type: 'TEAMS_ARE_LOADING', areLoading: bool});\r\nconst teamsFetchDataSuccess = (teams) => ({ type: 'TEAMS_FETCH_DATA_SUCCESS', data: teams});\r\n\r\nexport function teamsFetchData() {\r\n    return (dispatch) => {\r\n        window.client.getTeams(\r\n            (loading) => {\r\n                dispatch(teamsAreLoading(loading));\r\n            },\r\n            (response) => {\r\n                dispatch(teamsFetchDataSuccess(response));\r\n            },\r\n            (error) => {\r\n                dispatch(teamsHaveError(true));\r\n            }\r\n       );\r\n    };\r\n}\r\n","const topicsHaveError = (bool) => ({type: 'TOPICS_HAVE_ERROR', haveError: bool});\r\nconst topicsAreLoading = (bool) => ({type: 'TOPICS_ARE_LOADING', areLoading: bool});\r\nconst topicsFetchDataSuccess = (topics) => ({ type: 'TOPICS_FETCH_DATA_SUCCESS', data: topics});\r\nconst topicIsAdding = (topicIsAdding) => ({type: 'TOPIC_IS_ADDING', topicIsAdding});\r\nconst topicAddingSuccess = (newTopic) => ({type: 'TOPIC_ADDING_SUCCESS', newTopic});\r\nconst topicDeletingSuccess = (id) => ({ type: 'TOPIC_DELETING_SUCCESS', id});\r\nconst topicVotingSuccess = (id, voteType) => ({type: 'TOPIC_VOTING_SUCCESS', id, voteType})\r\n\r\nexport function topicsFetchData() {\r\n    return (dispatch) => {\r\n        window.client.getTopics(\r\n            (loading) => {\r\n                dispatch(topicsAreLoading(loading));\r\n            },\r\n            (response) => {\r\n                dispatch(topicsFetchDataSuccess(response));\r\n            },\r\n            (error) => {\r\n                dispatch(topicsHaveError(true));\r\n            }\r\n       );\r\n    };\r\n}\r\n\r\nexport function fetchNewTopic(title) {\r\n    return (dispatch) => {\r\n        window.client.addTopic(title,\r\n            (loading) => {\r\n                dispatch(topicIsAdding(loading));\r\n            },\r\n            (newTopic) => {\r\n                dispatch(topicAddingSuccess(newTopic));\r\n            },\r\n            (error) => {\r\n                dispatch(topicsHaveError(true));\r\n            }\r\n       );\r\n    }\r\n}\r\n\r\nexport function fetchDeleteTopic(id) {\r\n    return (dispatch) => {\r\n        window.client.deleteTopic(id,\r\n            (loading) => {\r\n                //dispatch(topicIsAdding(loading));\r\n            },\r\n            () => {\r\n                dispatch(topicDeletingSuccess(id));\r\n            },\r\n            (error) => {\r\n                dispatch(topicsHaveError(true));\r\n            }\r\n       );\r\n    }\r\n}\r\n\r\nexport function fetchVoteTopic(id, type) {\r\n    return (dispatch) => {\r\n        window.client.voteTopic(id, type,\r\n            (loading) => {\r\n                //dispatch(topicIsAdding(loading));\r\n            },\r\n            () => {\r\n                dispatch(topicVotingSuccess(id, type));\r\n            },\r\n            (error) => {\r\n                dispatch(topicsHaveError(true));\r\n            }\r\n       );\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {topicsFetchData, fetchNewTopic, fetchDeleteTopic, fetchVoteTopic} from '../../../redux/actionCreators/topics';\r\nimport './TopicsPage.css';\r\nimport Loading from '../../loading/Loading';\r\n\r\nclass TopicsPage extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchData();\r\n    }\r\n\r\n    handleCreateTopic = (title) => {\r\n        this.props.addTopic(title);\r\n    }\r\n\r\n    handleDeleteTopic = (id) => {\r\n        this.props.deleteTopic(id);\r\n    }\r\n\r\n    handleVoteTopic = (id, type) => {\r\n        this.props.voteTopic(id, type);\r\n    }\r\n\r\n    render() {\r\n        const {topics} = this.props;\r\n        if(!window.getSession()) {\r\n            return <Redirect to=\"/login\" /> \r\n        }\r\n\r\n        return(\r\n            <div className=\"Topics-page page row-container\">\r\n                <AddTopic onCreateTopic={this.handleCreateTopic} topicIsAdding={topics.topicIsAdding}></AddTopic>\r\n                {topics.areLoading\r\n                ?<Loading></Loading>\r\n                :topics.data.map(topic =>\r\n                    <Topic\r\n                        key={topic.id}\r\n                        title={topic.title}\r\n                        votingsCount={topic.votingsCount}\r\n                        votedByMe={topic.votedByMe}\r\n                        canDelete={topic.canDelete}\r\n                        onDelete={() => this.handleDeleteTopic(topic.id)}\r\n                        onVote={() => this.handleVoteTopic(topic.id, topic.votedByMe? 'unlike' : 'like')}\r\n                    ></Topic>)}\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        topics: state.topics,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       fetchData: () => dispatch(topicsFetchData()),\r\n       addTopic: (title) => dispatch(fetchNewTopic(title)),\r\n       deleteTopic: (id) => dispatch(fetchDeleteTopic(id)),\r\n       voteTopic: (id, type) => dispatch(fetchVoteTopic(id, type))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsPage);\r\n\r\nclass AddTopic extends React.Component {\r\n    state = {\r\n        addBtnClicked: false,\r\n        newTopicName: ''\r\n    }\r\n\r\n    handleNameInput = (event) => {\r\n        this.setState({newTopicName: event.target.value});\r\n    }\r\n\r\n    handleNameInputDisplay = () => {\r\n        this.setState({addBtnClicked: !this.state.addBtnClicked});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.handleNameInputDisplay();\r\n        this.props.onCreateTopic(this.state.newTopicName);\r\n    }\r\n \r\n    render() {\r\n        const {addBtnClicked, newTopicName} = this.state;\r\n        if(addBtnClicked) {\r\n            return (<div className=\"Topic container row-container\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"topic-header\">\r\n                                <input className=\"add-topic-input\" type=\"text\" placeholder=\"Topic name\" value={newTopicName} \r\n                                    onChange={this.handleNameInput} maxLength=\"20\" required></input>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"submit\" className=\"action-btn create-topic-btn\">Create topic</button>\r\n                                <button type=\"button\" className=\"action-btn cancel-topic-btn\"\r\n                                   onClick={this.handleNameInputDisplay}>Cancel</button>\r\n                            </div>                            \r\n                        </form>\r\n                        </div>);\r\n        }\r\n\r\n        return this.props.topicIsAdding\r\n        ?<span className=\"adding-topic-loader\">Adding new topic ...</span>\r\n        :<i className=\"fas fa-plus action-btn add-topic-btn\" onClick={this.handleNameInputDisplay}></i>\r\n    }\r\n}\r\n\r\nfunction Topic (props) {\r\n    return(\r\n        <div className=\"Topic container row-container\">\r\n            <div className=\"topic-header\">\r\n                <span>{props.title}</span>\r\n            </div>\r\n            <div className=\"topic-action-bar col-container\">\r\n                <div className=\"topic-votings-count col-container\">\r\n                    <i className={`fas fa-thumbs-up vote-mark ${props.votedByMe? 'voted-' : 'unvoted-'}topic-mark`}\r\n                        onClick={props.onVote}></i>\r\n                    <span>{props.votingsCount}</span>       \r\n                    <i className={`fas fa-trash delete-mark ${!props.canDelete? 'inactive-btn' : ''}`}\r\n                        onClick={props.onDelete}></i>             \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Header from './components/header/Header'\nimport LoginPage from './components/pages/login/LoginPage';\nimport RegisterPage from './components/pages/register/RegisterPage';\nimport HomePage from './components/pages/home/HomePage';\nimport Projects from './components/pages/projects/ProjectsPage';\nimport Teams from './components/pages/teams/TeamsPage';\nimport Topics from './components/pages/topics/TopicsPage';\nimport {connect} from 'react-redux';\nimport {userFetchData, userFetchLogOut} from './redux/actionCreators/user';\n\nclass App extends React.Component {\n    componentDidMount() {\n        const token = window.getSession();\n        if(token) {\n            this.props.fetchData({token})\n        }\n    }\n\n    render() {\n        return (<>\n            <Header onLogOut={this.props.logOut}></Header>\n            <Switch>\n                <Route exact path='/' component={HomePage}/>\n                <Route path='/login' component={LoginPage}/>\n                <Route path='/userprofile/:as' component={RegisterPage}/>\n                <Route path='/projects' component={Projects}/>\n                <Route path='/teams' component={Teams}/>\n                <Route path='/topics' component={Topics}/>\n            </Switch>\n      </>);\n    }\n   \n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (data) => dispatch(userFetchData(data)),\n        logOut: () => dispatch(userFetchLogOut()),\n    }\n}\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    data: [],\r\n    areLoading: false,\r\n    haveError: false,\r\n    topicIsAdding: false,\r\n    topicAddingSuccess: false\r\n}\r\n\r\nexport default function topics (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'TOPICS_ARE_LOADING':\r\n            return {...state, areLoading: action.areLoading};\r\n\r\n        case 'TOPICS_FETCH_DATA_SUCCESS':\r\n            \r\n            return {...state, data: action.data};\r\n        case 'TOPICS_HAVE_ERROR':\r\n\r\n            return {...state, haveError: action.haveError};\r\n        case 'TOPIC_IS_ADDING':\r\n\r\n            return {...state, topicIsAdding: action.topicIsAdding};\r\n        case 'TOPIC_ADDING_SUCCESS':\r\n\r\n            return {...state, data: [...state.data, action.newTopic]};\r\n        case 'TOPIC_DELETING_SUCCESS':\r\n        \r\n            return {...state, data: state.data.filter((topic => topic.id !== action.id))};\r\n        case 'TOPIC_VOTING_SUCCESS':\r\n            \r\n            return {...state, data: state.data.map((topic => {\r\n                if(topic.id === action.id) {\r\n                    return action.voteType === 'like'\r\n                    ?{...topic, votingsCount: topic.votingsCount + 1, votedByMe: true, canDelete: false}\r\n                    :{...topic, votingsCount: topic.votingsCount - 1, votedByMe: false}\r\n                }\r\n                return topic\r\n            }))};\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    data: [],\r\n    areLoading: false,\r\n    haveError: false\r\n}\r\n\r\nexport default function projects (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'PROJECTS_ARE_LOADING':\r\n            return {...state, areLoading: action.areLoading};\r\n\r\n        case 'PROJECTS_FETCH_DATA_SUCCESS':\r\n            \r\n            return {...state, data: action.data};\r\n        case 'PROJECTS_HAVE_ERROR':\r\n\r\n            return {...state, haveError: action.haveError};\r\n        case 'PROJECT_VOTING_SUCCESS':\r\n            \r\n            return {...state, data: state.data.map((project => {\r\n                if(project.id === action.id) {\r\n                    return {...project,  votedByMe: action.voteType === 'like'}\r\n                }\r\n                return project\r\n            }))};\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    data: [],\r\n    areLoading: false,\r\n    haveError: false\r\n}\r\n\r\nexport default function teams (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'TEAMS_ARE_LOADING':\r\n            return {...state, areLoading: action.areLoading};\r\n\r\n        case 'TEAMS_FETCH_DATA_SUCCESS':\r\n            \r\n            return {...state, data: action.data};\r\n        case 'TEAMS_HAVE_ERROR':\r\n\r\n            return {...state, haveError: action.haveError};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport  user from './reducers/user';\r\nimport  topics from './reducers/topics';\r\nimport  projects from './reducers/projects';\r\nimport  teams from './reducers/teams';\r\n\r\nconst teamBuilder = combineReducers({user, topics, projects, teams});\r\nconst store = createStore(teamBuilder, applyMiddleware(thunk));\r\n\r\nexport default store;","export default function user(state = {data: {}, isLoading: false, isLoggedIn: false, hasError: false, isLogOuting: false}, action) {\r\n    switch (action.type) {\r\n        case 'USER_IS_LOADING':\r\n            return {...state, isLoading: action.isLoading};\r\n\r\n        case 'USER_FETCH_DATA_SUCCESS':\r\n            \r\n            return {...state, data: action.data, isLoggedIn: true};\r\n        case 'USER_HAS_ERROR':\r\n\r\n            return {...state, hasError: action.hasError};\r\n        case 'USER_LOG_OUT':\r\n\r\n            return {...state, data: {}, isLoggedIn: false}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> \n    <HashRouter basename=\"/\">\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}